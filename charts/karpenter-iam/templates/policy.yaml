apiVersion: iam.services.k8s.aws/v1alpha1
kind: Policy
metadata:
  name: {{ .Values.clusterName}}-karpenter-iam-policy
spec:
  name: {{ .Values.clusterName}}-karpenter-iam-policy
  policyDocument: |
    {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Sid": "AllowScopedEC2InstanceAccessActions",
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ec2:{{ .Values.region}}::image/*",
            "arn:aws:ec2:{{ .Values.region}}::snapshot/*",
            "arn:aws:ec2:{{ .Values.region}}:*:security-group/*",
            "arn:aws:ec2:{{ .Values.region}}:*:subnet/*"
          ],
          "Action": [
            "ec2:RunInstances",
            "ec2:CreateFleet"
          ]
        },
        {
          "Sid": "AllowScopedEC2LaunchTemplateAccessActions",
          "Effect": "Allow",
          "Resource": "arn:aws:ec2:{{ .Values.region}}:*:launch-template/*",
          "Action": [
            "ec2:RunInstances",
            "ec2:CreateFleet"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceTag/kubernetes.io/cluster/{{ .Values.clusterName}}": "owned"
            },
            "StringLike": {
              "aws:ResourceTag/karpenter.sh/nodepool": "*"
            }
          }
        },
        {
          "Sid": "AllowScopedEC2InstanceActionsWithTags",
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ec2:{{ .Values.region}}:*:fleet/*",
            "arn:aws:ec2:{{ .Values.region}}:*:instance/*",
            "arn:aws:ec2:{{ .Values.region}}:*:volume/*",
            "arn:aws:ec2:{{ .Values.region}}:*:network-interface/*",
            "arn:aws:ec2:{{ .Values.region}}:*:launch-template/*",
            "arn:aws:ec2:{{ .Values.region}}:*:spot-instances-request/*"
          ],
          "Action": [
            "ec2:RunInstances",
            "ec2:CreateFleet",
            "ec2:CreateLaunchTemplate"
          ],
          "Condition": {
            "StringEquals": {
              "aws:RequestTag/kubernetes.io/cluster/{{ .Values.clusterName}}": "owned"
            },
            "StringLike": {
              "aws:RequestTag/karpenter.sh/nodepool": "*"
            }
          }
        },
        {
          "Sid": "AllowScopedResourceCreationTagging",
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ec2:{{ .Values.region}}:*:fleet/*",
            "arn:aws:ec2:{{ .Values.region}}:*:instance/*",
            "arn:aws:ec2:{{ .Values.region}}:*:volume/*",
            "arn:aws:ec2:{{ .Values.region}}:*:network-interface/*",
            "arn:aws:ec2:{{ .Values.region}}:*:launch-template/*",
            "arn:aws:ec2:{{ .Values.region}}:*:spot-instances-request/*"
          ],
          "Action": "ec2:CreateTags",
          "Condition": {
            "StringEquals": {
              "aws:RequestTag/kubernetes.io/cluster/{{ .Values.clusterName}}": "owned",
              "ec2:CreateAction": [
                "RunInstances",
                "CreateFleet",
                "CreateLaunchTemplate"
              ]
            },
            "StringLike": {
              "aws:RequestTag/karpenter.sh/nodepool": "*"
            }
          }
        },
        {
          "Sid": "AllowScopedResourceTagging",
          "Effect": "Allow",
          "Resource": "arn:aws:ec2:{{ .Values.region}}:*:instance/*",
          "Action": "ec2:CreateTags",
          "Condition": {
            "StringEquals": {
              "aws:ResourceTag/kubernetes.io/cluster/{{ .Values.clusterName}}": "owned"
            },
            "StringLike": {
              "aws:ResourceTag/karpenter.sh/nodepool": "*"
            },
            "ForAllValues:StringEquals": {
              "aws:TagKeys": [
                "karpenter.sh/nodeclaim",
                "Name"
              ]
            }
          }
        },
        {
          "Sid": "AllowScopedDeletion",
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ec2:{{ .Values.region}}:*:instance/*",
            "arn:aws:ec2:{{ .Values.region}}:*:launch-template/*"
          ],
          "Action": [
            "ec2:TerminateInstances",
            "ec2:DeleteLaunchTemplate"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceTag/kubernetes.io/cluster/{{ .Values.clusterName}}": "owned"
            },
            "StringLike": {
              "aws:ResourceTag/karpenter.sh/nodepool": "*"
            }
          }
        },
        {
          "Sid": "AllowRegionalReadActions",
          "Effect": "Allow",
          "Resource": "*",
          "Action": [
            "ec2:DescribeAvailabilityZones",
            "ec2:DescribeImages",
            "ec2:DescribeInstances",
            "ec2:DescribeInstanceTypeOfferings",
            "ec2:DescribeInstanceTypes",
            "ec2:DescribeLaunchTemplates",
            "ec2:DescribeSecurityGroups",
            "ec2:DescribeSpotPriceHistory",
            "ec2:DescribeSubnets"
          ],
          "Condition": {
            "StringEquals": {
              "aws:RequestedRegion": "{{ .Values.region}}"
            }
          }
        },
        {
          "Sid": "AllowSSMReadActions",
          "Effect": "Allow",
          "Resource": "arn:aws:ssm:{{ .Values.region}}::parameter/aws/service/*",
          "Action": "ssm:GetParameter"
        },
        {
          "Sid": "AllowPricingReadActions",
          "Effect": "Allow",
          "Resource": "*",
          "Action": "pricing:GetProducts"
        },
        {
          "Sid": "AllowPassingInstanceRole",
          "Effect": "Allow",
          "Resource": "arn:aws:iam::{{ .Values.accountId}}:role/karpenter-node*",
          "Action": "iam:PassRole",
          "Condition": {
            "StringEquals": {
              "iam:PassedToService": "ec2.amazonaws.com"
            }
          }
        },
        {
          "Sid": "AllowScopedInstanceProfileCreationActions",
          "Effect": "Allow",
          "Resource": "*",
          "Action": [
            "iam:CreateInstanceProfile"
          ],
          "Condition": {
            "StringEquals": {
              "aws:RequestTag/kubernetes.io/cluster/{{ .Values.clusterName}}": "owned",
              "aws:RequestTag/topology.kubernetes.io/region": "{{ .Values.region}}"
            },
            "StringLike": {
              "aws:RequestTag/karpenter.k8s.aws/ec2nodeclass": "*"
            }
          }
        },
        {
          "Sid": "AllowScopedInstanceProfileTagActions",
          "Effect": "Allow",
          "Resource": "*",
          "Action": [
            "iam:TagInstanceProfile"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceTag/kubernetes.io/cluster/{{ .Values.clusterName}}": "owned",
              "aws:ResourceTag/topology.kubernetes.io/region": "{{ .Values.region}}",
              "aws:RequestTag/kubernetes.io/cluster/{{ .Values.clusterName}}": "owned",
              "aws:RequestTag/topology.kubernetes.io/region": "{{ .Values.region}}"
            },
            "StringLike": {
              "aws:ResourceTag/karpenter.k8s.aws/ec2nodeclass": "*",
              "aws:RequestTag/karpenter.k8s.aws/ec2nodeclass": "*"
            }
          }
        },
        {
          "Sid": "AllowScopedInstanceProfileActions",
          "Effect": "Allow",
          "Resource": "*",
          "Action": [
            "iam:AddRoleToInstanceProfile",
            "iam:RemoveRoleFromInstanceProfile",
            "iam:DeleteInstanceProfile"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceTag/kubernetes.io/cluster/{{ .Values.clusterName}}": "owned",
              "aws:ResourceTag/topology.kubernetes.io/region": "{{ .Values.region}}"
            },
            "StringLike": {
              "aws:ResourceTag/karpenter.k8s.aws/ec2nodeclass": "*"
            }
          }
        },
        {
          "Sid": "AllowInstanceProfileReadActions",
          "Effect": "Allow",
          "Resource": "*",
          "Action": "iam:GetInstanceProfile"
        },
        {
          "Sid": "AllowAPIServerEndpointDiscovery",
          "Effect": "Allow",
          "Resource": "arn:aws:eks:{{ .Values.region}}:{{ .Values.accountId}}:cluster/{{ .Values.clusterName}}",
          "Action": "eks:DescribeCluster"
        }
      ]
    }